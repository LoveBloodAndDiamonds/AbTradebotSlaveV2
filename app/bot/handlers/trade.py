from datetime import datetime

from aiogram import types
from aiogram.filters import CommandObject

from app.logic import Logic


async def trade_command_handler(message: types.Message, command: CommandObject, logic: Logic) -> types.Message:
    """/trade command"""
    try:
        license_key_expired_date: datetime = await logic.get_license_key_expired_date()
        if license_key_expired_date < datetime.utcnow():
            raise Exception("–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞.")
    except Exception as e:
        return await message.answer(f"üõë –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    if not command.args:
        return await message.answer(
            f"–ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É —Ñ–æ—Ä–º–∞—Ç–∞:\n"
            "<blockquote>/trade {–ù–∞–∑–≤–∞–Ω–∏–µ–°—Ç—Ä–∞—Ç–µ–≥–∏–∏} {–†–∏—Å–∫}$ {–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ–ü–æ–∑–∏—Ü–∏–π}</blockquote>\n\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π –º–æ–∂–Ω–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å, –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ - —Å—Ç—Ä–∞–µ—Ç–≥–∏—è –±—É–¥–µ—Ç "
            f"—Ä–∞–±–æ—Ç–∞—Ç—å, –ø–æ–∫–∞ –í—ã –µ–µ –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ.\n\n"
            f"–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
            f"<blockquote>/trade btc1min 10$ 10</blockquote>\n\n"
            f"–ò–ª–∏:\n"
            f"<blockquote>/trade eth5min 10$</blockquote>"
        )

    try:
        if len(command.args.split(" ")) == 3:
            strategy_name, risk_usdt, trades_count = command.args.split(" ")
        elif len(command.args.split(" ")) == 2:
            strategy_name, risk_usdt = command.args.split(" ")
            trades_count = None
        risk_usdt = float(risk_usdt.replace("$", "").strip())
    except Exception as e:
        return await message.answer(f"üõë –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –≤–≤–µ–¥–µ–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    try:
        await logic.add_user_strategy(
            strategy_name=strategy_name,
            risk_usdt=risk_usdt,
            trades_count=int(trades_count) if trades_count else None
        )
    except Exception as e:
        return await message.answer(f"üõë –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: {e}")

    return await message.answer(
        f"‚úÖ –°—Ç—Ä–∞—Ç–µ–≥–∏—è {strategy_name} —Å —Ä–∏—Å–∫–æ–º {risk_usdt}$ –Ω–∞ {trades_count if trades_count else '‚àû'} —Å–¥–µ–ª–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
