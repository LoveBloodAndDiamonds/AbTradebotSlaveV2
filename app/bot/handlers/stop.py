from aiogram import types
from aiogram.filters import CommandObject

from app.logic import Logic


async def stop_command_handler(message: types.Message, command: CommandObject, logic: Logic) -> types.Message:
    """/stop command"""

    if not command.args:
        return await message.answer(
            f"–ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É —Ñ–æ—Ä–º–∞—Ç–∞:\n"
            "<blockquote>/stop {–ù–∞–∑–≤–∞–Ω–∏–µ–°—Ç—Ä–∞—Ç–µ–≥–∏–∏}</blockquote>\n"
            "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –≤–≤–µ–¥–∏—Ç–µ:\n"
            "<blockquote>/stop *</blockquote>\n"
        )

    strategy_name: str = command.args.strip()
    try:
        logic.remove_user_startegy(strategy_name=strategy_name, stop_all=strategy_name == "*")
    except Exception as e:
        return await message.answer(f"üõë –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: {e}")
    if strategy_name == "*":
        return await message.answer(f"‚úÖ –í—Å–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")
    else:
        return await message.answer(f"‚úÖ –°—Ç—Ä–∞—Ç–µ–≥–∏—è {strategy_name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
